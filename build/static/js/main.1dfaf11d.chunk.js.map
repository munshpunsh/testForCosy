{"version":3,"sources":["reducers/events.js","reducers/index.js","store/configureStore.js","components/Day/index.js","components/Calendar/index.js","methods/daysInMonths.js","components/Form/index.js","components/Event/index.js","components/ViewedEvents/index.js","App.js","actions/addEventAction.js","actions/deleteEventAction.js","actions/editEventAction.js","actions/showEventsAction.js","index.js"],"names":["initialState","store","localStorage","getItem","JSON","parse","events","id","Math","random","name","time","participants","description","viewedEvents","dayForView","undefined","setItem","stringify","initState","rootReducer","combineReducers","state","arguments","length","action","type","stateAfterAdd","Object","objectSpread","push","payload","day","Date","getDate","stateAfterShow","stateAfterDelete","filter","event","newViewedEvents","map","newEvents","newStateAfterEdit","createStore","applyMiddleware","thunk","logger","Day","nextProps","nextState","nextContext","this","props","_this$props","showEvents","react_default","a","createElement","className","onClick","Badge","badgeContent","eventsNumber","color","Component","Calendar","renderDays","number","year","month","arrayForDays","_loop","i","DateForDay","eventsForCurrentDay","getMonth","components_Day","_this","key","numberOfDays","daysInMonths","Form","datetime","handleClick","newState","refs","participant","querySelector","value","setState","forceUpdate","handleChange","e","target","defineProperty","handleSubmit","preventDefault","addEvent","editEvent","editClick","getTime","edit","index","splice","_this2","onSubmit","Grid","container","spacing","item","lg","TextField","label","defaultValue","onChange","required","alignItems","direction","Typography","Button","style","marginLeft","deleteParticipant","variant","ref","Event","panel","deleteClick","deleteEvent","timeForEdit","date","concat","getFullYear","getHours","getMinutes","ExpansionPanel","expanded","ExpansionPanelSummary","aria-controls","Edit_default","Delete_default","ExpansionPanelDetails","Fragment","String","components_Form","ViewedEvents","renderEvents","components_Event","App","Number","split","_this$state","Container","maxWidth","justify","align","components_Calendar","components_ViewedEvents","connect","dispatch","ReactDOM","render","react_redux_es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1dfaf11d.chunk.js","sourcesContent":["function initState () {\r\n    let store = localStorage.getItem('events');\r\n    if (!store) {\r\n        store = {\r\n            events: [\r\n                {\r\n                    id: Math.random(),\r\n                    name: 'Event 1',\r\n                    time: 1564309043653,\r\n                    participants: ['participant 1', 'participant 2'],\r\n                    description: 'description of Event 1'\r\n                },\r\n                {\r\n                    id: Math.random(),\r\n                    name: 'Event 1',\r\n                    time: 1564296540000,\r\n                    participants: [],\r\n                    description: 'description of Event 1'\r\n                }\r\n            ],\r\n            viewedEvents: [],\r\n            dayForView: undefined\r\n        };\r\n        localStorage.setItem('events', JSON.stringify(store))\r\n    } else {\r\n        store = JSON.parse(store)\r\n    }\r\n    return store;\r\n}\r\nconst initialState = initState();\r\n\r\nexport function eventsReducer (state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'ADD_EVENT':\r\n            let stateAfterAdd = {...state};\r\n            stateAfterAdd.events.push(action.payload)\r\n            let day = new Date(action.payload.time);\r\n            if (state.dayForView === day.getDate()) stateAfterAdd.viewedEvents.push(action.payload)\r\n            localStorage.setItem('events', JSON.stringify(stateAfterAdd))\r\n            return stateAfterAdd\r\n        case 'SHOW_DETAILED':\r\n            let stateAfterShow = {...state, viewedEvents: action.payload.events, dayForView:action.payload.day}\r\n            localStorage.setItem('events', JSON.stringify(stateAfterShow))\r\n            return stateAfterShow\r\n        case 'DELETE_EVET':\r\n            let stateAfterDelete = {\r\n                ...state,\r\n                viewedEvents: state.viewedEvents.filter((event) => {if (event.id !== action.payload) return true}),\r\n                events: state.events.filter((event) => {if (event.id !== action.payload) return true})\r\n            }\r\n            localStorage.setItem('events', JSON.stringify(stateAfterDelete))\r\n            return stateAfterDelete\r\n        case 'EDIT_EVENT':\r\n            let newViewedEvents = state.viewedEvents.map((event) => {\r\n                if (event.id === action.payload.id) return action.payload\r\n                return event\r\n            });\r\n            let newEvents = state.viewedEvents.map((event) => {\r\n                if (event.id === action.payload.id) return action.payload\r\n                return event\r\n            });\r\n            let newStateAfterEdit = {\r\n                ...state,\r\n                viewedEvents: newViewedEvents,\r\n                events: newEvents\r\n            }\r\n            localStorage.setItem('events', JSON.stringify(newStateAfterEdit))\r\n            return newStateAfterEdit\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport {eventsReducer} from \"./events\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    events:eventsReducer,\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport { rootReducer } from '../reducers'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger))","import React, { Component } from 'react'\r\nimport Badge from '@material-ui/core/Badge';\r\nimport './style.css'\r\n\r\nclass Day extends Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextProps.day !== this.props.day || JSON.stringify(nextProps.events) !== JSON.stringify(this.props.events)) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    render () {\r\n        const {events,showEvents, day} = this.props;\r\n        return (\r\n            <div className='one_day' onClick={() => {showEvents({events,day})}}>\r\n                <div className='one_day_content' >\r\n                    <Badge badgeContent={this.props.eventsNumber} color=\"secondary\">\r\n                        <span className='one_day_content_day'> {this.props.day}</span>\r\n                    </Badge>\r\n                </div>\r\n            </div>\r\n            )\r\n    }\r\n}\r\nexport default Day","import React, { Component } from 'react'\r\nimport daysInMonths from '../../methods/daysInMonths'\r\nimport Day from '../../components/Day'\r\nimport './style.css'\r\n\r\n\r\nclass Calendar extends Component {\r\n    renderDays = (number, events, year, month) => {\r\n        let arrayForDays = [];\r\n        for (let i = 1; i <= number; i++) {\r\n            let DateForDay = new Date(year,month, i);\r\n            let eventsForCurrentDay = events.filter((event) => {\r\n                const day = new Date(event.time);\r\n                if (day.getDate() === DateForDay.getDate() && day.getMonth() === DateForDay.getMonth()) return true\r\n                return false\r\n            })\r\n            let day = <Day events={eventsForCurrentDay} showEvents={this.props.showEvents} eventsNumber={eventsForCurrentDay.length} key={i} day={i}/>;\r\n            arrayForDays.push(day);\r\n        }\r\n        return arrayForDays;\r\n    }\r\n\r\n\r\n    render () {\r\n        const {year, month} = this.props;\r\n        const numberOfDays = daysInMonths(year,month);\r\n        const {events} = this.props;\r\n        return (\r\n            <div className='container_for_months'>\r\n                {this.renderDays(numberOfDays, events, year, month)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Calendar","export default function daysInMonths (year,month) {\r\n    const daysInMonth = 32 - new Date(year, month, 32).getDate();\r\n    return daysInMonth;\r\n}\r\n","import React, { Component } from 'react'\r\nimport {TextField, Grid, Button, Typography} from '@material-ui/core/';\r\nimport './style.css'\r\n\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        participants: this.props.participants ? this.props.participants : [],\r\n        name: this.props.name ? this.props.name : '',\r\n        description: this.props.description ? this.props.description : '',\r\n        datetime: this.props.time ? this.props.time : '2019-07-28T10:49'\r\n    }\r\n\r\n    deleteParticipant (index) {\r\n        let newState = this.state.participants;\r\n        newState.splice(index,1)\r\n        this.setState({\r\n            participants: newState\r\n        })\r\n    }\r\n\r\n    handleClick = () => {\r\n        let newState = this.state.participants;\r\n        newState.push(this.refs.participant.querySelector('input').value);\r\n        this.setState({\r\n            participants: newState\r\n        })\r\n        this.refs.participant.querySelector('input').value = '';\r\n        this.forceUpdate()\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let value = e.target.value;\r\n        let name = e.target.id;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {addEvent, editEvent, editClick} = this.props;\r\n        const time = new Date(this.state.datetime);\r\n        let event = {\r\n            id: this.props.id ? this.props.id : Math.random(),\r\n            name: this.state.name,\r\n            time: time.getTime(),\r\n            participants: this.state.participants,\r\n            description: this.state.description\r\n        }\r\n        if (this.props.edit) {\r\n            editEvent(event)\r\n            editClick()\r\n        } else {\r\n            addEvent(event)\r\n        }\r\n\r\n        e.target.name.value = '';\r\n        e.target.description.value = '';\r\n        this.setState({\r\n            participants: []\r\n        })\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (JSON.stringify(nextProps) !== JSON.stringify(this.props) || JSON.stringify(nextState) !== JSON.stringify(this.state)) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className='form_for_add'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item lg={this.props.edit ? 12 : 4}>\r\n                        <TextField\r\n                            id=\"datetime\"\r\n                            label=\"Выберите дату\"\r\n                            type=\"datetime-local\"\r\n                            defaultValue={this.props.time ? this.props.time : '2019-07-28T10:49'}\r\n                            onChange={this.handleChange}\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    <Grid item lg={this.props.edit ? 12 : 4}>\r\n                        <TextField\r\n                            id=\"name\"\r\n                            label=\"Введите название\"\r\n                            type=\"text\"\r\n                            defaultValue={this.props.name ? this.props.name : ''}\r\n                            onChange={this.handleChange}\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    <Grid item lg={this.props.edit ? 12 : 4}>\r\n                        <TextField\r\n                            id=\"description\"\r\n                            label=\"Введите описание\"\r\n                            type=\"text\"\r\n                            defaultValue={this.props.description ? this.props.description : ''}\r\n                            onChange={this.handleChange}\r\n                            required\r\n                        />\r\n                    </Grid>\r\n                    <Grid item container lg={12}>\r\n                        <Grid container spacing={2} alignItems='flex-end'>\r\n                            <Grid item lg={12}>\r\n                                {\r\n                                    this.state.participants.map((participant,index) => {\r\n                                        return (\r\n                                            <Grid key={index} direction='row' alignItems='center' container item lg={12}>\r\n                                                <Typography>\r\n                                                    Участник {index + 1}:\r\n                                                </Typography>\r\n                                                <Typography>\r\n                                                    &nbsp;{participant}\r\n                                                </Typography>\r\n                                                <Button style={{marginLeft:`15px`}} onClick={() => {this.deleteParticipant(index)}} type='button' variant='contained'>\r\n                                                    Удалить\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField\r\n                                    id=\"participant\"\r\n                                    label=\"Добавьте участника\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"\"\r\n                                    ref='participant'\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button onClick={this.handleClick} type='button' variant='contained'>\r\n                                    Добавить\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item lg={4}>\r\n                        <Button type='submit' variant='contained'>\r\n                            {this.props.edit ? 'Изменить' : 'Сохранить событие'}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            )\r\n    }\r\n}\r\nexport default Form","import React, { Component } from 'react'\r\nimport './style.css'\r\nimport { ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, Typography } from '@material-ui/core/';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Form from '../../components/Form'\r\n\r\nclass Event extends Component {\r\n    state = {\r\n        edit: false\r\n    }\r\n    handleChange = panel => {\r\n        this.props.handleChange(panel)\r\n    }\r\n\r\n    deleteClick = (id) => {\r\n        const {deleteEvent}= this.props\r\n        deleteEvent(id)\r\n    }\r\n\r\n    editClick = () => {\r\n        this.setState({\r\n            edit: !this.state.edit\r\n        })\r\n    }\r\n    timeForEdit = (time) => {\r\n        let date = new Date(time);\r\n        return `${date.getFullYear()}-${date.getMonth() < 10 ? '0' + (date.getMonth() + 1):date.getMonth() + 1}-${date.getDate() < 10 ? '0' + date.getDate() : date.getDate()}T${date.getHours() < 10 ? '0' + date.getHours() : date.getHours()}:${date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()}`\r\n    }\r\n\r\n    render () {\r\n        const {item,index} = this.props;\r\n\r\n        return (\r\n            <ExpansionPanel key={index} expanded={this.props.expanded === `panel${index +1 }`} onChange={() => {this.handleChange(`panel${index +1 }`)}}>\r\n                <ExpansionPanelSummary\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    <Typography>\r\n                        {item.name}\r\n                    </Typography>\r\n                    <Typography>\r\n                        <EditIcon onClick={this.editClick}/>\r\n                        <DeleteIcon onClick={() => {this.deleteClick(item.id)}}/>\r\n                    </Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails className='details'>\r\n                    {!this.state.edit &&\r\n                        <React.Fragment>\r\n                            <Typography>\r\n                                Описание: {item.description}\r\n                            </Typography><br/>\r\n                            <Typography>\r\n                                Время проведения: {String(new Date(item.time))}\r\n                            </Typography><br/>\r\n                            <Typography>\r\n                                Участники: {item.participants.map((participant,i) => (`${participant}${item.participants.length - 1 === i ? '' : ','}`))}\r\n                            </Typography>\r\n                        </React.Fragment>\r\n                    }\r\n                    {\r\n                        this.state.edit &&\r\n                        <Form editClick={this.editClick} editEvent={this.props.editEvent} id={item.id} description={item.description} time={this.timeForEdit(item.time)} name={item.name} participants={item.participants} edit={this.state.edit}/>\r\n                    }\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Event","import React, { Component } from 'react'\r\nimport './style.css'\r\nimport Event from '../../components/Event'\r\n\r\nclass ViewedEvents extends Component {\r\n    state = {\r\n        expanded: 'panel1'\r\n    }\r\n\r\n    renderEvents = (events) => {\r\n        return events.map((item,index) => {\r\n            return (\r\n                <Event deleteEvent={this.props.deleteEvent} editEvent={this.props.editEvent} key={index} expanded={this.state.expanded} handleChange={this.handleChange} item={item} index={index}/>\r\n            )\r\n        })\r\n    }\r\n\r\n    handleChange = panel => {\r\n        this.setState({\r\n            expanded: panel\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const viewedEvents = this.props.viewedEvents;\r\n        return (\r\n            <div className='container_for_months'>\r\n                {this.renderEvents(viewedEvents)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewedEvents","import React, { Component } from 'react'\r\nimport {Container, Typography, Grid, TextField} from '@material-ui/core/';\r\nimport Calendar from './components/Calendar'\r\nimport ViewedEvents from './components/ViewedEvents'\r\nimport Form from './components/Form'\r\nimport {connect} from \"react-redux\";\r\nimport {addEvent} from './actions/addEventAction'\r\nimport {showEvents} from './actions/showEventsAction'\r\nimport {deleteEvent} from './actions/deleteEventAction'\r\nimport {editEvent} from './actions/editEventAction'\r\n\r\nclass App extends Component {\r\n    state = {\r\n        year: 2019,\r\n        month: 6\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            year: Number(e.target.value.split('-')[0]),\r\n            month: Number(e.target.value.split('-')[1]) - 1,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {year, month} = this.state;\r\n        return (\r\n            <Container maxWidth=\"lg\" >\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"flex-start\"\r\n                    spacing={1}\r\n                >\r\n                    <Grid\r\n                        item\r\n                        lg={12}\r\n                    >\r\n                        <Typography variant={'h5'} align={'center'} className='Title'>\r\n                            Календарь событий\r\n                        </Typography>\r\n                        <Typography variant={'h5'} align={'center'} className='Title'>\r\n                            <TextField\r\n                                onChange={this.handleChange}\r\n                                id=\"date\"\r\n                                label=\"Выберите месяц\"\r\n                                type=\"date\"\r\n                                defaultValue=\"2019-07-28\"\r\n                            />\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        lg={this.props.events.viewedEvents.length > 0 ? 6 : 12}\r\n                    >\r\n                        <Calendar year={year} month={month} events={this.props.events.events} showEvents={this.props.showEvents}/>\r\n                    </Grid>\r\n                    {\r\n                        this.props.events.viewedEvents.length > 0 &&\r\n                        <Grid\r\n                            item\r\n                            lg={6}\r\n                        >\r\n                            <ViewedEvents editEvent={this.props.editEvent} deleteEvent={this.props.deleteEvent} viewedEvents={this.props.events.viewedEvents} />\r\n                        </Grid>\r\n                    }\r\n                    <Grid\r\n                        item\r\n                        lg={8}\r\n                    >\r\n                        <Form addEvent={this.props.addEvent}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nconst MapDispatchToProps = dispatch => {\r\n    return {\r\n        addEvent: event => dispatch(addEvent(event)),\r\n        deleteEvent: event => dispatch(deleteEvent(event)),\r\n        editEvent: event => dispatch(editEvent(event)),\r\n        showEvents: events => dispatch(showEvents(events))\r\n    }\r\n}\r\n\r\nconst MapStateToProps = store => {\r\n    return {\r\n        events: store.events,\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    MapStateToProps,\r\n    MapDispatchToProps\r\n)(App)","export function addEvent (value = {}) {\r\n    return {\r\n        type: 'ADD_EVENT',\r\n        payload: value\r\n    }\r\n}","export function deleteEvent (value) {\r\n    return {\r\n        type: 'DELETE_EVET',\r\n        payload: value\r\n    }\r\n}","export function editEvent (value) {\r\n    return {\r\n        type: 'EDIT_EVENT',\r\n        payload: value\r\n    }\r\n}","export function showEvents (value = []) {\r\n    return {\r\n        type: 'SHOW_DETAILED',\r\n        payload: value\r\n    }\r\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { store } from './store/configureStore' // исправлено\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport 'typeface-roboto';\n\nimport './index.css'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}